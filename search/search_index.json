{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Watson Foundation For Health Cohorting Documentation \u00b6 Common Service Asset in IBM Watson Foundation for Health \u2192 to be used by the IHE team in R1 Brought to you by: Nebula and Galaxy","title":"Home"},{"location":"#watson-foundation-for-health-cohorting-documentation","text":"Common Service Asset in IBM Watson Foundation for Health \u2192 to be used by the IHE team in R1 Brought to you by: Nebula and Galaxy","title":"Watson Foundation For Health Cohorting Documentation"},{"location":"dev-guide/artifactory-and-taas/","text":"Artifactory and TaaS \u00b6 This page will cover how we can use and manage our Artifactory repos. TaaS \u00b6 The TaaS organization aims to provide a simple way to provision and manage commonly used resources not handled by other organizations (e.g. IBM Whitewater). Before doing anything with TaaS, you need to be a part of or create a team. Your current teams, and the ability to create a new team can be found here . For this project, we are operating under the wh-cohort-team team. Managing Users \u00b6 You can add new users to a TaaS team by scrolling down to the Team Membership section of your team\u2019s page. Adding new users here will give them access to the TaaS resource for our team, but will not give access to any of the resources managed by TaaS (e.g. Artifactory). Note : Giving access to our TaaS team is not required to give someone access to our Artifactory repositories. Note : We have not identified a set of \u201cadmins\u201d for our TaaS team yet. We\u2019re currently giving every user the admin role. This is subject to change as our usage of TaaS matures. Managing Subscriptions \u00b6 You can manage what subscriptions your team has by scrolling down to the Subscriptions section of your team\u2019s page. You first need a subscription before you can create any resources. We currently have no need for any subscriptions past the Core Subscription , which gives us \u201cone dedicated Jenkins Master, one Artifactory team, and one UCD team\u201d. Managing Resources \u00b6 You can manage the resources utilized by your team by scrolling down to the Resources section of your team\u2019s page. We currently only have an Artifactory resource setup. Further resources may get created later, but we have not seen a need for them yet. Clicking the Manage Resource button for the Artifactory resource will take you to the management page for our Artifactory repos. Artifactory \u00b6 The TaaS organization has provisioned a massive Artifactory instance for all TaaS customers to use. By creating a new Artifactory \u201cresource\u201d, you\u2019re actually just gaining access to create repositories under the single Artifactory instance. Any number of \u201crepositories\u201d may be created under our Artifactory resource. There\u2019s a wide selection of potential repository types to choose from. For this project, we have the wh-cohort-team-artifactory resource. Managing Users \u00b6 User access for Artifactory is managed separately from the TaaS team itself. You can manage the users for an Artifactory resource by scrolling down to the Roles section of your team\u2019s Artifactory page. Giving users access to our Artifactory resource will allow them to browse and potentially create new artifacts and repositories. Note : Developers on the cohorting project should be given write/read access, but outside developers should only need read only access. Managing Repositories \u00b6 You can managed the repositories for an Artifactory resource by scrolling down to the Repositories section of your team\u2019s Artifactory page. Here you can create or edit repositories as needed. The different types of respositories and how they can be configured is outside the scope of this document.","title":"Artifactory and TaaS"},{"location":"dev-guide/artifactory-and-taas/#artifactory-and-taas","text":"This page will cover how we can use and manage our Artifactory repos.","title":"Artifactory and TaaS"},{"location":"dev-guide/artifactory-and-taas/#taas","text":"The TaaS organization aims to provide a simple way to provision and manage commonly used resources not handled by other organizations (e.g. IBM Whitewater). Before doing anything with TaaS, you need to be a part of or create a team. Your current teams, and the ability to create a new team can be found here . For this project, we are operating under the wh-cohort-team team.","title":"TaaS"},{"location":"dev-guide/artifactory-and-taas/#managing-users","text":"You can add new users to a TaaS team by scrolling down to the Team Membership section of your team\u2019s page. Adding new users here will give them access to the TaaS resource for our team, but will not give access to any of the resources managed by TaaS (e.g. Artifactory). Note : Giving access to our TaaS team is not required to give someone access to our Artifactory repositories. Note : We have not identified a set of \u201cadmins\u201d for our TaaS team yet. We\u2019re currently giving every user the admin role. This is subject to change as our usage of TaaS matures.","title":"Managing Users"},{"location":"dev-guide/artifactory-and-taas/#managing-subscriptions","text":"You can manage what subscriptions your team has by scrolling down to the Subscriptions section of your team\u2019s page. You first need a subscription before you can create any resources. We currently have no need for any subscriptions past the Core Subscription , which gives us \u201cone dedicated Jenkins Master, one Artifactory team, and one UCD team\u201d.","title":"Managing Subscriptions"},{"location":"dev-guide/artifactory-and-taas/#managing-resources","text":"You can manage the resources utilized by your team by scrolling down to the Resources section of your team\u2019s page. We currently only have an Artifactory resource setup. Further resources may get created later, but we have not seen a need for them yet. Clicking the Manage Resource button for the Artifactory resource will take you to the management page for our Artifactory repos.","title":"Managing Resources"},{"location":"dev-guide/artifactory-and-taas/#artifactory","text":"The TaaS organization has provisioned a massive Artifactory instance for all TaaS customers to use. By creating a new Artifactory \u201cresource\u201d, you\u2019re actually just gaining access to create repositories under the single Artifactory instance. Any number of \u201crepositories\u201d may be created under our Artifactory resource. There\u2019s a wide selection of potential repository types to choose from. For this project, we have the wh-cohort-team-artifactory resource.","title":"Artifactory"},{"location":"dev-guide/artifactory-and-taas/#managing-users_1","text":"User access for Artifactory is managed separately from the TaaS team itself. You can manage the users for an Artifactory resource by scrolling down to the Roles section of your team\u2019s Artifactory page. Giving users access to our Artifactory resource will allow them to browse and potentially create new artifacts and repositories. Note : Developers on the cohorting project should be given write/read access, but outside developers should only need read only access.","title":"Managing Users"},{"location":"dev-guide/artifactory-and-taas/#managing-repositories","text":"You can managed the repositories for an Artifactory resource by scrolling down to the Repositories section of your team\u2019s Artifactory page. Here you can create or edit repositories as needed. The different types of respositories and how they can be configured is outside the scope of this document.","title":"Managing Repositories"},{"location":"dev-guide/getting-started/","text":"Developer Guide - Getting Started \u00b6 Getting started text. Also, add additional pages as needed. Resources \u00b6 Sprint Goals Slack Channels \u00b6 #cohorting-backend #cohorting-dev #cohort-ihe","title":"Getting Started"},{"location":"dev-guide/getting-started/#developer-guide-getting-started","text":"Getting started text. Also, add additional pages as needed.","title":"Developer Guide - Getting Started"},{"location":"dev-guide/getting-started/#resources","text":"Sprint Goals","title":"Resources"},{"location":"dev-guide/getting-started/#slack-channels","text":"#cohorting-backend #cohorting-dev #cohort-ihe","title":"Slack Channels"},{"location":"dev-guide/maven/","text":"Maven \u00b6 We currently use a set of internal IBM Artifactory Maven repositories to store any java artifacts we create. For more information on Artifactory itself, see Artifactory and TaaS . Local Setup \u00b6 Your ~/.m2/settings.xml file must contain a <server> element for the following \u201cids\u201d\u2026 * ibm-releases * ibm-snapshots * ibm-all The username value must be your w3 intranet email address. The password value will be your Artifactory API key, which can be retrieved here . All three servers will have the same username and password. Here\u2019s a barebones settings.xml template\u2026 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <settings xmlns= \"http://maven.apache.org/SETTINGS/1.1.0\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://maven.apache.org/SETTINGS/1.1.0 http://maven.apache.org/xsd/settings-1.1.0.xsd\" > <servers> <server> <username> EMAIL_ADDRESS </username> <password> API_TOKEN </password> <id> ibm-releases </id> </server> <server> <username> EMAIL_ADDRESS </username> <password> API_TOKEN </password> <id> ibm-snapshots </id> </server> <server> <username> EMAIL_ADDRESS </username> <password> API_TOKEN </password> <id> ibm-all </id> </server> </servers> </settings> Note : You can simply copy the three <server> elements and merge them into your existing settings.xml file instead of completely replacing the whole thing. Current Repositories \u00b6 We currently have the following Maven repositories\u2026 - wh-cohort-team-snapshot-maven-local: This is where our snapshot artifacts will be stored. - wh-cohort-team-release-maven-local: This is where our release artifacts will be stored. - wh-cohort-team-maven-remote: This is meant to be a proxy for artifacts outside our project. This can be thought of as an alternative to \u201cMaven Central\u201d. - wh-cohort-team-snapshot-maven-virtual: A union of the local snapshot and remote repositories. - wh-cohort-team-release-maven-virtual: A union of the local release and remote repositories. - wh-cohort-team-all-maven-virtual: A union of the snapshot and release virtual repositories. This is the \u201ccatch all\u201d respository.","title":"Maven"},{"location":"dev-guide/maven/#maven","text":"We currently use a set of internal IBM Artifactory Maven repositories to store any java artifacts we create. For more information on Artifactory itself, see Artifactory and TaaS .","title":"Maven"},{"location":"dev-guide/maven/#local-setup","text":"Your ~/.m2/settings.xml file must contain a <server> element for the following \u201cids\u201d\u2026 * ibm-releases * ibm-snapshots * ibm-all The username value must be your w3 intranet email address. The password value will be your Artifactory API key, which can be retrieved here . All three servers will have the same username and password. Here\u2019s a barebones settings.xml template\u2026 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <settings xmlns= \"http://maven.apache.org/SETTINGS/1.1.0\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://maven.apache.org/SETTINGS/1.1.0 http://maven.apache.org/xsd/settings-1.1.0.xsd\" > <servers> <server> <username> EMAIL_ADDRESS </username> <password> API_TOKEN </password> <id> ibm-releases </id> </server> <server> <username> EMAIL_ADDRESS </username> <password> API_TOKEN </password> <id> ibm-snapshots </id> </server> <server> <username> EMAIL_ADDRESS </username> <password> API_TOKEN </password> <id> ibm-all </id> </server> </servers> </settings> Note : You can simply copy the three <server> elements and merge them into your existing settings.xml file instead of completely replacing the whole thing.","title":"Local Setup"},{"location":"dev-guide/maven/#current-repositories","text":"We currently have the following Maven repositories\u2026 - wh-cohort-team-snapshot-maven-local: This is where our snapshot artifacts will be stored. - wh-cohort-team-release-maven-local: This is where our release artifacts will be stored. - wh-cohort-team-maven-remote: This is meant to be a proxy for artifacts outside our project. This can be thought of as an alternative to \u201cMaven Central\u201d. - wh-cohort-team-snapshot-maven-virtual: A union of the local snapshot and remote repositories. - wh-cohort-team-release-maven-virtual: A union of the local release and remote repositories. - wh-cohort-team-all-maven-virtual: A union of the snapshot and release virtual repositories. This is the \u201ccatch all\u201d respository.","title":"Current Repositories"},{"location":"dev-guide/open-source/","text":"Open Source Guide \u00b6 Resources \u00b6 Annual Open Source Training Github User Mapper (Personal -> IBM)","title":"Open Source"},{"location":"dev-guide/open-source/#open-source-guide","text":"","title":"Open Source Guide"},{"location":"dev-guide/open-source/#resources","text":"Annual Open Source Training Github User Mapper (Personal -> IBM)","title":"Resources"},{"location":"dev-guide/spikes/cql-engine-audit/","text":"cql_engine Audit \u00b6 Audit Metadata \u00b6 date: 10/12/20 github repo: https://github.com/DBCG/cql_engine tag: v1.5.0 TODOs \u00b6 Summary \u00b6 Count Category Reported Severity Description 6 java :heavy_check_mark: low TODO s with open github issue 104 cql low Didn\u2019t do a full audit of cql files but generally seemed to be innocuous 7 xml / xsd low test xml / xsd files 43 java test varies TODO s found in java test classes 58 java main varies TODO s found in java main classes Total: 218 # cql_engine on tags/v1.5.0 ag -a \"todo\" | wc -l Java Classes Detailed \u00b6 Name Type Severity Description TestR4ModelResolver test low \u201cThe cause of failure for this is unknown\u201d ElmTests test medium Test validating that the ELM library deserialized from json matches the ELM library deserialized from xml is not implemented RepeatEvaluator main low NotImplementedException MessageEvaluator main low/medium stripPHI helper method is used, but not implemented Dstu2FhirModelResolver main low profile validation not performed in is(Object value, Class<?> type) API Dstu3FhirModelResolver main low profile validation not performed in is(Object value, Class<?> type) API R4FhirModelResolver main low profile validation not performed in is(Object value, Class<?> type) API Context main low \u201cThis is actually wrong, but to fix this would require preserving type information in the ELM\u201d in resolveFunctionRef helper method CqlEngine main low possible peformance benefit: \u201creset a context rather than create a new one\u201d this.initializeContext(libraryCache, library, debugMap); CqlEngine main low/medium context does not support the use of multiple Library s Context context = new Context(library); Github Bugs :bug: \u00b6 https://github.com/DBCG/cql_engine/labels/bug Issue # Stale* Category Severity Description 35 edge-case low invalid resolve when operating on \u201cqualified values: e.g. unit is cm instead of cm^2 when multiplying 41 date-logic low interval calculation issue 43 edge-case low no unit normalization support: e.g. 1'm' < 1'cm' 45 edge-case low no interval \u201cwidth\u201d support: e.g. Equivalent(x, 20 days) 85 edge-case low precision inaccuracy: e.g. Power(10.0,-8.0) 86 edge-case low no implicit casting support: e.g. 2*Power(10,-8) 166 edge-case low fhirClient provides incorrect POST vs GET request 213 date-logic low interval does not \u201cmerge\u201d properly 216 null low null handling issue 246 date-logic low date math issue e.g. @2016 + 365 days 264 null low null handling issue 269 edge-case medium Observation.value.value is empty, but has workaround 303 :zzz: 378 edge-case low decimal precision issue (has code fix) 379 edge-case low decimal precision issue (has code fix) 382 date-logic low date interval issue 399 edge-case low ConvertsTo function issue (has code fix) 403 date-logic low date interval issue 404 date-logic low date interval issue: relates to #403 411 edge-case low unit conversion issue (has code fix) Total: 20 Stale: issue hasn\u2019t been commented on for a \u201clong time\u201d after requesting more details","title":"cql_engine audit"},{"location":"dev-guide/spikes/cql-engine-audit/#cql_engine-audit","text":"","title":"cql_engine Audit"},{"location":"dev-guide/spikes/cql-engine-audit/#audit-metadata","text":"date: 10/12/20 github repo: https://github.com/DBCG/cql_engine tag: v1.5.0","title":"Audit Metadata"},{"location":"dev-guide/spikes/cql-engine-audit/#todos","text":"","title":"TODOs"},{"location":"dev-guide/spikes/cql-engine-audit/#summary","text":"Count Category Reported Severity Description 6 java :heavy_check_mark: low TODO s with open github issue 104 cql low Didn\u2019t do a full audit of cql files but generally seemed to be innocuous 7 xml / xsd low test xml / xsd files 43 java test varies TODO s found in java test classes 58 java main varies TODO s found in java main classes Total: 218 # cql_engine on tags/v1.5.0 ag -a \"todo\" | wc -l","title":"Summary"},{"location":"dev-guide/spikes/cql-engine-audit/#java-classes-detailed","text":"Name Type Severity Description TestR4ModelResolver test low \u201cThe cause of failure for this is unknown\u201d ElmTests test medium Test validating that the ELM library deserialized from json matches the ELM library deserialized from xml is not implemented RepeatEvaluator main low NotImplementedException MessageEvaluator main low/medium stripPHI helper method is used, but not implemented Dstu2FhirModelResolver main low profile validation not performed in is(Object value, Class<?> type) API Dstu3FhirModelResolver main low profile validation not performed in is(Object value, Class<?> type) API R4FhirModelResolver main low profile validation not performed in is(Object value, Class<?> type) API Context main low \u201cThis is actually wrong, but to fix this would require preserving type information in the ELM\u201d in resolveFunctionRef helper method CqlEngine main low possible peformance benefit: \u201creset a context rather than create a new one\u201d this.initializeContext(libraryCache, library, debugMap); CqlEngine main low/medium context does not support the use of multiple Library s Context context = new Context(library);","title":"Java Classes Detailed"},{"location":"dev-guide/spikes/cql-engine-audit/#github-bugs-bug","text":"https://github.com/DBCG/cql_engine/labels/bug Issue # Stale* Category Severity Description 35 edge-case low invalid resolve when operating on \u201cqualified values: e.g. unit is cm instead of cm^2 when multiplying 41 date-logic low interval calculation issue 43 edge-case low no unit normalization support: e.g. 1'm' < 1'cm' 45 edge-case low no interval \u201cwidth\u201d support: e.g. Equivalent(x, 20 days) 85 edge-case low precision inaccuracy: e.g. Power(10.0,-8.0) 86 edge-case low no implicit casting support: e.g. 2*Power(10,-8) 166 edge-case low fhirClient provides incorrect POST vs GET request 213 date-logic low interval does not \u201cmerge\u201d properly 216 null low null handling issue 246 date-logic low date math issue e.g. @2016 + 365 days 264 null low null handling issue 269 edge-case medium Observation.value.value is empty, but has workaround 303 :zzz: 378 edge-case low decimal precision issue (has code fix) 379 edge-case low decimal precision issue (has code fix) 382 date-logic low date interval issue 399 edge-case low ConvertsTo function issue (has code fix) 403 date-logic low date interval issue 404 date-logic low date interval issue: relates to #403 411 edge-case low unit conversion issue (has code fix) Total: 20 Stale: issue hasn\u2019t been commented on for a \u201clong time\u201d after requesting more details","title":"Github Bugs :bug:"},{"location":"installation/instructions/","text":"Installation Instructions \u00b6 Add installation instructions. Common content can go here above the first heading in a section and be rendered for all selections! \u2013macOS\u2013 \u00b6 macOS instructions here \u2013Windows\u2013 \u00b6 Windows instructions here","title":"Instructions"},{"location":"installation/instructions/#installation-instructions","text":"Add installation instructions. Common content can go here above the first heading in a section and be rendered for all selections!","title":"Installation Instructions"},{"location":"installation/instructions/#-macos-","text":"macOS instructions here","title":"--macOS--"},{"location":"installation/instructions/#-windows-","text":"Windows instructions here","title":"--Windows--"},{"location":"user-guide/getting-started/","text":"User Guide - Getting Started \u00b6 The IBM CQL Engine code is stored under https://github.ibm.com/watson-health-cohorting/cohort-engine . A basic wrapper around the open source CQL engine is provided in the CqlEngineWrapper class. Builds are defined using Maven assuming version 3.6.3 (latest). You can download Maven here - https://maven.apache.org/download.cgi . Kwas is working on getting the builds automated and JARs pushed to Artifactory. In the meantime, you will want to use \u201cgit clone\u201d to pull down the repository and \u201cmvn install\u201d to build it. As part of the default build there is an \u201cuber jar\u201d (aka shaded jar) produced that can be used as a simple entry point to the main method (e.g. java -jar target/cohort-engine-0.0.1-SNAPSHOT-shaded.jar \u2026). You will need a FHIR server to interact with. If you have CDT access, you can use Kubernetes port-forward to point the engine at our instance in the cloud using a command similar to the one below. kubectl -n cdt-commops-quickteam01-ns-01 port-forward service/fhir-internal 9443:9443 If you don\u2019t have CDT access or would prefer to use a server with more data, you can try http://hapi.fhir.org/baseR4 . Either way FHIR configuration is provided as a JSON file. See config/local-ibm-fhir.json for an example that assumes you are using the IBM FHIR server in our CDT environment port-forwarded on your local box. If you go this route, make sure you pass -Djavax.net.ssl.trustStore=config/trustStore.jks -Djavax.net.ssl.trustStorePassword=change-password as JVM arguments or you will get SSL errors. There are sample CQL definitions under src/test/resources/cql if you don\u2019t have your own. A sample execution would look something like this.. $ java -jar target/cohort-engine-0.0.1-SNAPSHOT-shaded.jar -d config/remote-hapi-fhir.json -t config/remote-hapi-fhir.json -f src/test/resources/cql/basic -l Test -c 1235008 Loading libraries from src \\t est \\r esources \\c ql \\b asic ... Loaded file src \\t est \\r esources \\c ql \\b asic \\t est.xml Loaded 1 libraries [ main ] INFO ca.uhn.fhir.util.VersionUtil - HAPI FHIR version 4 .2.0 - Rev 8491707942 [ main ] INFO ca.uhn.fhir.context.FhirContext - Creating new FHIR context for FHIR version [ R4 ] [ main ] INFO ca.uhn.fhir.util.XmlUtil - Unable to determine StAX implementation: java.xml/META-INF/MANIFEST.MF not found [ main ] INFO ca.uhn.fhir.context.FhirContext - Creating new FHIR context for FHIR version [ R4 ] Expression: Patient, Context: 1235008 , Result: Patient/org.hl7.fhir.r4.model.Patient@2b7e8044 Expression: Female, Context: 1235008 , Result: Boolean/false Expression: Male, Context: 1235008 , Result: Boolean/true Expression: Over the hill, Context: 1235008 , Result: Boolean/true Or if you need to pass parameters\u2026 $ java -jar target/cohort-engine-0.0.1-SNAPSHOT-shaded.jar -d config/remote-hapi-fhir.json -t config/remote-hapi-fhir.json -f src/test/resources/cql/parameters -l Test -c 1235008 -p MaxAge:integer:40 Loading libraries from src \\t est \\r esources \\c ql \\p arameters ... Loaded file src \\t est \\r esources \\c ql \\p arameters \\t est-with-params.xml Loaded 1 libraries [ main ] INFO ca.uhn.fhir.util.VersionUtil - HAPI FHIR version 4 .2.0 - Rev 8491707942 [ main ] INFO ca.uhn.fhir.context.FhirContext - Creating new FHIR context for FHIR version [ R4 ] [ main ] INFO ca.uhn.fhir.util.XmlUtil - Unable to determine StAX implementation: java.xml/META-INF/MANIFEST.MF not found [ main ] INFO ca.uhn.fhir.context.FhirContext - Creating new FHIR context for FHIR version [ R4 ] Expression: Patient, Context: 1235008 , Result: Patient/org.hl7.fhir.r4.model.Patient@6bc24e72 Expression: Female, Context: 1235008 , Result: Boolean/false Expression: Male, Context: 1235008 , Result: Boolean/true All CQL data types are supported as parameters types with lowercase type names. Intervals of integer, decimal, quantity, datetime, and time are supported. Date literals should start with an \u201c@\u201d sign (e.g. @2020-09-27). If no Timezone is provided in a datetime or time parameter value, the system default timezone is used. Error states \u00b6 The Engine detects and throws IllegalArgumentException for the following error states: 1) When the CqlEngineWrapper.evaluate(\u2026) method is invoked without first configuring the library sources, data server, and terminology server settings. 2) When the CqlEngineWrapper.evaluate(\u2026) method is invoked without providing a library name and at least one context ID (aka patient ID). 3) When the CqlEngineWrapper.evaluate(\u2026) method is invoked for a CQL Library that contains parameters with no default value and no value is provided in the method\u2019s parameters map. 4) When the CqlEngineWrapper.evaluate(\u2026) method is invoked for a CQL Library that is not loaded 5) When the CqlEngineWrapper.main(\u2026) method is invoked with an invalid parameter type or interval subtype Connectivity issues to the FHIR server are reported through the HAPI FHIR Client library. See HAPI documentation for complete details, but an example exception would be ca.uhn.fhir.rest.client.exceptions.FhirClientConnectionException. An UnsupportedOperationException is thrown if a parameter type of \u201cconcept\u201d is attempted from the command line. Concept parameters are complex and unlikely to be necessary, so no effort was made to support them right now.","title":"Getting Started"},{"location":"user-guide/getting-started/#user-guide-getting-started","text":"The IBM CQL Engine code is stored under https://github.ibm.com/watson-health-cohorting/cohort-engine . A basic wrapper around the open source CQL engine is provided in the CqlEngineWrapper class. Builds are defined using Maven assuming version 3.6.3 (latest). You can download Maven here - https://maven.apache.org/download.cgi . Kwas is working on getting the builds automated and JARs pushed to Artifactory. In the meantime, you will want to use \u201cgit clone\u201d to pull down the repository and \u201cmvn install\u201d to build it. As part of the default build there is an \u201cuber jar\u201d (aka shaded jar) produced that can be used as a simple entry point to the main method (e.g. java -jar target/cohort-engine-0.0.1-SNAPSHOT-shaded.jar \u2026). You will need a FHIR server to interact with. If you have CDT access, you can use Kubernetes port-forward to point the engine at our instance in the cloud using a command similar to the one below. kubectl -n cdt-commops-quickteam01-ns-01 port-forward service/fhir-internal 9443:9443 If you don\u2019t have CDT access or would prefer to use a server with more data, you can try http://hapi.fhir.org/baseR4 . Either way FHIR configuration is provided as a JSON file. See config/local-ibm-fhir.json for an example that assumes you are using the IBM FHIR server in our CDT environment port-forwarded on your local box. If you go this route, make sure you pass -Djavax.net.ssl.trustStore=config/trustStore.jks -Djavax.net.ssl.trustStorePassword=change-password as JVM arguments or you will get SSL errors. There are sample CQL definitions under src/test/resources/cql if you don\u2019t have your own. A sample execution would look something like this.. $ java -jar target/cohort-engine-0.0.1-SNAPSHOT-shaded.jar -d config/remote-hapi-fhir.json -t config/remote-hapi-fhir.json -f src/test/resources/cql/basic -l Test -c 1235008 Loading libraries from src \\t est \\r esources \\c ql \\b asic ... Loaded file src \\t est \\r esources \\c ql \\b asic \\t est.xml Loaded 1 libraries [ main ] INFO ca.uhn.fhir.util.VersionUtil - HAPI FHIR version 4 .2.0 - Rev 8491707942 [ main ] INFO ca.uhn.fhir.context.FhirContext - Creating new FHIR context for FHIR version [ R4 ] [ main ] INFO ca.uhn.fhir.util.XmlUtil - Unable to determine StAX implementation: java.xml/META-INF/MANIFEST.MF not found [ main ] INFO ca.uhn.fhir.context.FhirContext - Creating new FHIR context for FHIR version [ R4 ] Expression: Patient, Context: 1235008 , Result: Patient/org.hl7.fhir.r4.model.Patient@2b7e8044 Expression: Female, Context: 1235008 , Result: Boolean/false Expression: Male, Context: 1235008 , Result: Boolean/true Expression: Over the hill, Context: 1235008 , Result: Boolean/true Or if you need to pass parameters\u2026 $ java -jar target/cohort-engine-0.0.1-SNAPSHOT-shaded.jar -d config/remote-hapi-fhir.json -t config/remote-hapi-fhir.json -f src/test/resources/cql/parameters -l Test -c 1235008 -p MaxAge:integer:40 Loading libraries from src \\t est \\r esources \\c ql \\p arameters ... Loaded file src \\t est \\r esources \\c ql \\p arameters \\t est-with-params.xml Loaded 1 libraries [ main ] INFO ca.uhn.fhir.util.VersionUtil - HAPI FHIR version 4 .2.0 - Rev 8491707942 [ main ] INFO ca.uhn.fhir.context.FhirContext - Creating new FHIR context for FHIR version [ R4 ] [ main ] INFO ca.uhn.fhir.util.XmlUtil - Unable to determine StAX implementation: java.xml/META-INF/MANIFEST.MF not found [ main ] INFO ca.uhn.fhir.context.FhirContext - Creating new FHIR context for FHIR version [ R4 ] Expression: Patient, Context: 1235008 , Result: Patient/org.hl7.fhir.r4.model.Patient@6bc24e72 Expression: Female, Context: 1235008 , Result: Boolean/false Expression: Male, Context: 1235008 , Result: Boolean/true All CQL data types are supported as parameters types with lowercase type names. Intervals of integer, decimal, quantity, datetime, and time are supported. Date literals should start with an \u201c@\u201d sign (e.g. @2020-09-27). If no Timezone is provided in a datetime or time parameter value, the system default timezone is used.","title":"User Guide - Getting Started"},{"location":"user-guide/getting-started/#error-states","text":"The Engine detects and throws IllegalArgumentException for the following error states: 1) When the CqlEngineWrapper.evaluate(\u2026) method is invoked without first configuring the library sources, data server, and terminology server settings. 2) When the CqlEngineWrapper.evaluate(\u2026) method is invoked without providing a library name and at least one context ID (aka patient ID). 3) When the CqlEngineWrapper.evaluate(\u2026) method is invoked for a CQL Library that contains parameters with no default value and no value is provided in the method\u2019s parameters map. 4) When the CqlEngineWrapper.evaluate(\u2026) method is invoked for a CQL Library that is not loaded 5) When the CqlEngineWrapper.main(\u2026) method is invoked with an invalid parameter type or interval subtype Connectivity issues to the FHIR server are reported through the HAPI FHIR Client library. See HAPI documentation for complete details, but an example exception would be ca.uhn.fhir.rest.client.exceptions.FhirClientConnectionException. An UnsupportedOperationException is thrown if a parameter type of \u201cconcept\u201d is attempted from the command line. Concept parameters are complex and unlikely to be necessary, so no effort was made to support them right now.","title":"Error states"}]}